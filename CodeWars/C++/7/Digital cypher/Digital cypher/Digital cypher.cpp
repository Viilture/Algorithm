// Digital cypher.cpp : Этот файл содержит функцию 'main'. Здесь начинается и заканчивается выполнение программы.
//

#include "pch.h"
#include <iostream>
#include <vector>
#include <map>
#include <string>


class Kata
{
     std::map<char, int> shifr
    { {'a' ,1},
    {'b',2},
    {'c',3},
    {'d',4},
    {'e',5},
    {'f',6},
    {'g',7},
    {'h',8},
    {'i',9},
    {'j',10},
    {'k',11},
    {'l',12},
    {'m',13},
    {'n',14},
    {'o',15},
    {'p',16},
    {'q',17},
    {'r',18},
    {'s',19},
    {'t',20},
    {'u',21},
    {'v',22},
    {'w',23},
    {'x',24},
    {'y',25},
    {'z',26},
    };


public:
    static std::vector<int> Encode(std::string str, int n)
    {   
        std::vector<int> out;

        for (auto i : str)
        {

            out.push_back(shifr[i]);
        }
        return out;
    }
};

int main()
{
    std::vector<int> out = Kata::Encode("scout", 1939);
    for (auto &i : out)
    {
        std::cout << i;
    }

}

// Запуск программы: CTRL+F5 или меню 'Отладка' > 'Запуск без отладки'
// Отладка программы: F5 или меню 'Отладка' > 'Запустить отладку'

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне 'Выходные данные' можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне 'Список ошибок' можно просматривать ошибки.
//   5. Последовательно выберите пункты меню 'Проект' > 'Добавить новый элемент', чтобы создать файлы кода, или 'Проект' > 'Добавить существующий элемент', чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню 'Файл' > 'Открыть' > 'Проект' и выберите SLN-файл.
